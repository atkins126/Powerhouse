// tblAppliances will be the application’s central database. I.E, all appliances ever used by the users of the application will be stored here. 
A JSON file will then store the ApplianceID’s of all appliances that the current user account uses. These ID’s can be loaded into RAM as an array of integers.

// This means that the application will then feature a login page and that multiple users will be able to login to the app. 
User login credentials will be stored in the database as tblUsers.

// A user GUID exists to internally identify users and their activities by their GUID instead of username. 
This means that a username can be changed so long as the username remains unique. (add this info to user reqs) 
// Because user GUID’s are unknown to users, it also helps in deterring users from tampering with the JSON file, 
because they’ll be modifying things but they won’t know who it’s for


Logical flow: When the program starts up, ALL users currently in JSON will be loaded into memory.
 After a user is logged in: it will ONLY load appliances into memory from the database that are currently in use by the current user who’s been logged in.

 // Add an OTP email if forgot password?


 What can be added to my app?
1.	Gamification: Consider adding a gamification element to your application to incentivize users to reduce their energy usage. For example, you could award points or badges to users who consistently reduce their energy usage over time.
2.	Personalized tips: Rather than providing generic tips and tricks for reducing energy consumption, consider using the data you collect from each user to provide personalized recommendations based on their energy usage patterns. For example, if a user consistently leaves their TV on standby, your application could suggest ways to reduce standby power usage.
3.	Integration with smart home devices: If possible, consider integrating your application with smart home devices such as smart plugs or smart thermostats. This would allow users to control their energy usage directly from your application and receive real-time feedback on their energy consumption.
4.	Social sharing: Allow users to share their energy usage data and progress on social media platforms. This could help to raise awareness of energy conservation and encourage others to adopt similar practices.
5.	Carbon footprint calculator: In addition to tracking energy usage, consider adding a feature that calculates a user's carbon footprint based on their energy consumption. This could help users to better understand the environmental impact of their energy usage and motivate them to reduce their energy consumption.
